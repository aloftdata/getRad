[{"path":[]},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://aloftdata.github.io/getRad/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://aloftdata.github.io/getRad/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to getRad","title":"Contributing to getRad","text":"outlines propose change getRad. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://aloftdata.github.io/getRad/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to getRad","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://aloftdata.github.io/getRad/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to getRad","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://aloftdata.github.io/getRad/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to getRad","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"aloftdata/getRad\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://aloftdata.github.io/getRad/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to getRad","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://aloftdata.github.io/getRad/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to getRad","text":"Please note getRad project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://aloftdata.github.io/getRad/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 University Amsterdam Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aloftdata.github.io/getRad/articles/supported_sources.html","id":"polar-volume-pvol-data","dir":"Articles","previous_headings":"","what":"Polar volume (PVOL) data","title":"Supported sources","text":"get_pvol() can read polar volume data number sources. See map details. get overview weather radar metadata, use get_weather_radars().","code":""},{"path":"https://aloftdata.github.io/getRad/articles/supported_sources.html","id":"vertical-profile-time-series-vpts-data","dir":"Articles","previous_headings":"","what":"Vertical profile time series (VPTS) data","title":"Supported sources","text":"get_vpts() can read vertical profile data following sources. sources correspond different processing pipelines. can, example, use polar volumes processed filtered different ways, details see Shamoun-Baranes et al. (2020). Multiple sources can thus contain data radar time periods. overview coverage available use get_vpts_coverage() explore article getRad webpage.","code":""},{"path":"https://aloftdata.github.io/getRad/articles/supported_sources.html","id":"baltrad-uva-ecog-04003","dir":"Articles","previous_headings":"Vertical profile time series (VPTS) data","what":"baltrad, uva, ecog-04003","title":"Supported sources","text":"data stored Aloft bucket. baltrad source covers radars longest time series, however data quality variable polar volumes sometimes filtered biological signals processing vertical profiles. uva ecog-04003 curated datasets. See details.","code":""},{"path":"https://aloftdata.github.io/getRad/articles/supported_sources.html","id":"rmi","dir":"Articles","previous_headings":"Vertical profile time series (VPTS) data","what":"rmi","title":"Supported sources","text":"data provided Royal Meteorological Institute Belgium (RMI). dataset restricted Belgium radars surrounding countries. See details.","code":""},{"path":"https://aloftdata.github.io/getRad/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart Kranstauber. Author, maintainer.            University Amsterdam Pieter Huybrechts. Author.            Research Institute Nature Forest (INBO) Peter Desmet. Author.            Research Institute Nature Forest (INBO) Cecilia Nilsson. Contributor.            Lund University Alexander Tedeschi. Contributor.            Cornell Lab Ornithology Hidde Leijnse. Contributor.            Royal Netherlands Meteorological Institute Bart Hoekstra. Contributor.            University Amsterdam University Amsterdam. Copyright holder. Biodiversa+. Funder.           https://hirad.science/","code":""},{"path":"https://aloftdata.github.io/getRad/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kranstauber B, Huybrechts P, Desmet P (2025). getRad: Download Radar Data Biological Research. R package version 0.2.3, https://github.com/aloftdata/getRad.","code":"@Manual{,   title = {getRad: Download Radar Data for Biological Research},   author = {Bart Kranstauber and Pieter Huybrechts and Peter Desmet},   year = {2025},   note = {R package version 0.2.3},   url = {https://github.com/aloftdata/getRad}, }"},{"path":"https://aloftdata.github.io/getRad/index.html","id":"getrad","dir":"","previous_headings":"","what":"Download Radar Data for Biological Research","title":"Download Radar Data for Biological Research","text":"getRad R package provides unified interface download radar data biological aeroecological research. gives access polar volume radar data vertical profile data different sources loads directly R. getRad also facilitates exploration data tools bioRad standardizing data.","code":""},{"path":"https://aloftdata.github.io/getRad/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Radar Data for Biological Research","text":"Install latest released version CRAN: development version GitHub:","code":"install.packages(\"getRad\") # install.packages(\"devtools\") devtools::install_github(\"aloftdata/getRad\")"},{"path":"https://aloftdata.github.io/getRad/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Download Radar Data for Biological Research","text":"Download polar volume, plot using bioRad:     Download vertical profile time series Aloft bucket:","code":"library(getRad) library(bioRad) # Plot daytime insect movements in Finland (Mäkinen et al. 2022) pvol <- get_pvol(\"fianj\", as.POSIXct(\"2012-05-17 14:00\", tz = \"UTC\")) plot(project_as_ppi(get_scan(pvol, 0), range_max = 75000)) plot(calculate_vp(pvol, h_layer = 50, n_layer = 40, warning = FALSE)) # Plot nocturnal migration in Finland pvol <- get_pvol(\"fianj\", as.POSIXct(\"2012-05-11 23:00\", tz = \"UTC\")) plot(project_as_ppi(get_scan(pvol, 0), range_max = 75000)) plot(calculate_vp(pvol, h_layer = 50, n_layer = 40, warning = FALSE)) # Plot VPTS data for two radars vpts_list <- get_vpts(   radar = c(\"bejab\", \"deess\"),   datetime = lubridate::interval(     lubridate::as_datetime(\"2021-10-03 16:00:00\"),     lubridate::as_datetime(\"2021-10-05 10:00:00\")   ),   source = \"baltrad\" ) par(mfrow = 2:1) for (i in names(vpts_list)) {   plot(regularize_vpts(vpts_list[[i]]), main = i) }"},{"path":"https://aloftdata.github.io/getRad/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Download Radar Data for Biological Research","text":"welcome contributions including bug reports. License: MIT Get citation information getRad R citation(\"getRad\"). Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/getRad-package.html","id":null,"dir":"Reference","previous_headings":"","what":"getRad: Download Radar Data for Biological Research — getRad-package","title":"getRad: Download Radar Data for Biological Research — getRad-package","text":"Load polar volume vertical profile data aeroecological research directly R. 'getRad' can access data several sources Europe US standardize facilitate exploration tools 'bioRad'.","code":""},{"path":[]},{"path":"https://aloftdata.github.io/getRad/reference/getRad-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"getRad: Download Radar Data for Biological Research — getRad-package","text":"Maintainer: Bart Kranstauber b.kranstauber@uva.nl (ORCID) (University Amsterdam) Authors: Pieter Huybrechts pieter.huybrechts@inbo.(ORCID) (Research Institute Nature Forest (INBO)) Peter Desmet peter.desmet@inbo.(ORCID) (Research Institute Nature Forest (INBO)) contributors: Cecilia Nilsson cecilia.nilsson@biol.lu.se (ORCID) (Lund University) [contributor] Alexander Tedeschi at744@cornell.edu (ORCID) (Cornell Lab Ornithology) [contributor] Hidde Leijnse (ORCID) (Royal Netherlands Meteorological Institute) [contributor] Bart Hoekstra (ORCID) (University Amsterdam) [contributor] University Amsterdam (04dkp9463) [copyright holder] Biodiversa+ (https://hirad.science/) [funder]","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_pvol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get polar volume (PVOL) data from supported sources — get_pvol","title":"Get polar volume (PVOL) data from supported sources — get_pvol","text":"Gets polar volume data supported sources returns (list ) polar volume objects. source automatically detected based provided radar.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_pvol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get polar volume (PVOL) data from supported sources — get_pvol","text":"","code":"get_pvol(radar = NULL, datetime = NULL, ...)"},{"path":"https://aloftdata.github.io/getRad/reference/get_pvol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get polar volume (PVOL) data from supported sources — get_pvol","text":"radar Name radar (odim code) character string (e.g. \"nlhrw\" \"fikor\"). datetime Either: single POSIXct, representative data file downloaded. cases time . lubridate::interval() two POSIXct, data files downloaded. ... Additional arguments passed reading functions, example param = \"\" bioRad::read_pvolfile().","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_pvol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get polar volume (PVOL) data from supported sources — get_pvol","text":"Either polar volume list polar volumes. See bioRad::summary.pvol() details.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_pvol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get polar volume (PVOL) data from supported sources — get_pvol","text":"details supported sources, see vignette(\"supported_sources\"). Within supported countries might also temporal restrictions radars operational. example, radars status 0 get_weather_radars(\"opera\") currently operational. radars nexrad archive can read successfully. Radars associated Terminal Doppler Weather Radar (TDWR) program can read. can identified using stntype column get_weather_radars(\"nexrad\").","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_pvol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get polar volume (PVOL) data from supported sources — get_pvol","text":"","code":"if (FALSE) { # interactive() # Get PVOL data for a single radar and datetime get_pvol(\"deess\", as.POSIXct(Sys.Date()))  # Get PVOL data for multiple radars and a single datetime get_pvol(   c(\"deess\", \"dehnr\", \"fianj\", \"czska\", \"KABR\"),   as.POSIXct(Sys.Date()) ) }"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","title":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","text":"Gets vertical profile time series data supported sources returns (list ) vpts objects dplyr::tibble().","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","text":"","code":"get_vpts(   radar,   datetime,   source = c(\"baltrad\", \"uva\", \"ecog-04003\", \"rmi\"),   return_type = c(\"vpts\", \"tibble\") )"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","text":"radar Name radar (odim code) character string (e.g. \"nlhrw\" \"fikor\"). datetime Either: POSIXct datetime (character representation), data file downloaded. Date date (character representation), data files downloaded. vector datetimes dates, data files downloaded. lubridate::interval(), data files downloaded. source Source data. One \"baltrad\", \"uva\", \"ecog-04003\" \"rmi\". one source can queried time. provided, \"baltrad\" used. return_type Type object returned. Either: \"vpts\": vpts object(s) (default). \"tibble\": dplyr::tibble().","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","text":"Either vpts object, list vpts objects tibble. See bioRad::summary.vpts details.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","text":"details supported sources, see vignette(\"supported_sources\").","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get vertical profile time series (VPTS) data from supported sources — get_vpts","text":"","code":"if (FALSE) { # interactive() # Get VPTS data for a single radar and date get_vpts(radar = \"bejab\", datetime = \"2023-01-01\", source = \"baltrad\") get_vpts(radar = \"bejab\", datetime = \"2020-01-19\", source = \"rmi\")  # Get VPTS data for multiple radars and a single date get_vpts(   radar = c(\"dehnr\", \"deflg\"),   datetime = lubridate::ymd(\"20171015\"),   source = \"baltrad\" )  # Get VPTS data for a single radar and a date range get_vpts(   radar = \"bejab\",   datetime = lubridate::interval(     lubridate::ymd_hms(\"2023-01-01 00:00:00\"),     lubridate::ymd_hms(\"2023-01-02 00:14:00\")   ),   source = \"baltrad\" ) get_vpts(\"bejab\", lubridate::interval(\"20210101\", \"20210301\"))  # Get VPTS data for a single radar, date range and non-default source get_vpts(radar = \"bejab\", datetime = \"2016-09-29\", source = \"ecog-04003\")  # Return a tibble instead of a vpts object get_vpts(   radar = \"chlem\",   datetime = \"2023-03-10\",   source = \"baltrad\",   return_type = \"tibble\" ) }"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_aloft.html","id":null,"dir":"Reference","previous_headings":"","what":"Get VPTS data from the Aloft bucket — get_vpts_aloft","title":"Get VPTS data from the Aloft bucket — get_vpts_aloft","text":"Gets VPTS data Aloft bucket.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_aloft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get VPTS data from the Aloft bucket — get_vpts_aloft","text":"","code":"get_vpts_aloft(   radar_odim_code,   rounded_interval,   source = c(\"baltrad\", \"uva\", \"ecog-04003\"),   coverage = get_vpts_coverage_aloft() )"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_aloft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get VPTS data from the Aloft bucket — get_vpts_aloft","text":"radar_odim_code Radar ODIM code. rounded_interval Interval fetch data , rounded nearest day. source Source data. One baltrad, uva ecog-04003. coverage data frame containing coverage Aloft bucket. provided, fetched via internet.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_aloft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get VPTS data from the Aloft bucket — get_vpts_aloft","text":"tibble VPTS data.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_aloft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get VPTS data from the Aloft bucket — get_vpts_aloft","text":"default, data Aloft bucket retrieved https://aloftdata.s3-eu-west-1.amazonaws.com. can changed setting options(getRad.aloft_data_url) desired url.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_aloft.html","id":"inner-working","dir":"Reference","previous_headings":"","what":"Inner working","title":"Get VPTS data from the Aloft bucket — get_vpts_aloft","text":"Constructs S3 paths VPTS files based input. Performs parallel HTTP requests fetch VPTS CSV data. Parses response bodies assumptions column classes. Adds column radar source. Overwrites radar column radar_odim_code, values column considered error.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get VPTS file coverage from supported sources — get_vpts_coverage","title":"Get VPTS file coverage from supported sources — get_vpts_coverage","text":"Gets VPTS file coverage supported sources per radar date.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get VPTS file coverage from supported sources — get_vpts_coverage","text":"","code":"get_vpts_coverage(source = c(\"baltrad\", \"uva\", \"ecog-04003\", \"rmi\"), ...)"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get VPTS file coverage from supported sources — get_vpts_coverage","text":"source Source data. One \"baltrad\", \"uva\", \"ecog-04003\" \"rmi\". provided, \"baltrad\" used. Alternatively \"\" can used data sources returned. ... Arguments passed internal functions.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get VPTS file coverage from supported sources — get_vpts_coverage","text":"data.frame tibble least three columns, source, radar date indicate combination data exists.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get VPTS file coverage from supported sources — get_vpts_coverage","text":"","code":"if (FALSE) { # interactive() get_vpts_coverage() }"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_rmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get VPTS data from RMI — get_vpts_rmi","title":"Get VPTS data from RMI — get_vpts_rmi","text":"Get VPTS data RMI_DATASET_CROW.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_rmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get VPTS data from RMI — get_vpts_rmi","text":"","code":"get_vpts_rmi(radar_odim_code, rounded_interval)"},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_rmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get VPTS data from RMI — get_vpts_rmi","text":"radar_odim_code Radar ODIM code. rounded_interval Interval fetch data , rounded nearest day.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_vpts_rmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get VPTS data from RMI — get_vpts_rmi","text":"tibble VPTS data.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_weather_radars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get weather radar metadata — get_weather_radars","title":"Get weather radar metadata — get_weather_radars","text":"Gets weather radar metadata OPERA /NEXRAD.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_weather_radars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get weather radar metadata — get_weather_radars","text":"","code":"get_weather_radars(source = c(\"opera\", \"nexrad\"), use_cache = TRUE, ...)"},{"path":"https://aloftdata.github.io/getRad/reference/get_weather_radars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get weather radar metadata — get_weather_radars","text":"source Source metadata. \"opera\", \"nexrad\" \"\". provided, \"opera\" used. use_cache Logical indicating whether use cache. Default TRUE. FALSE cache ignored file fetched anew. can also useful want force refresh cache. ... Additional arguments passed reading functions per source, currently used.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_weather_radars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get weather radar metadata — get_weather_radars","text":"sf tibble weather radar metadata. cases column source added indicate source data radar show radar identifiers used functions like get_pvol() get_vpts().","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_weather_radars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get weather radar metadata — get_weather_radars","text":"source files function : opera: OPERA_RADARS_DB.json (main/current) OPERA_RADARS_ARH_DB.json (archive). column origin added indicate file metadata derived . nexrad: nexrad-stations.txt.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/get_weather_radars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get weather radar metadata — get_weather_radars","text":"","code":"if (FALSE) { # interactive() # Get radar metadata from OPERA get_weather_radars(source = \"opera\")  # Get radar metadata from NEXRAD get_weather_radars(source = \"nexrad\") }"},{"path":"https://aloftdata.github.io/getRad/reference/req_cache_getrad.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to set the cache for a getRad specific httr2 request — req_cache_getrad","title":"Function to set the cache for a getRad specific httr2 request — req_cache_getrad","text":"Function set cache getRad specific httr2 request","code":""},{"path":"https://aloftdata.github.io/getRad/reference/req_cache_getrad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to set the cache for a getRad specific httr2 request — req_cache_getrad","text":"","code":"req_cache_getrad(   req,   use_cache = TRUE,   max_age = getOption(\"getRad.max_cache_age_seconds\", default = 6 * 60 * 60),   max_n = getOption(\"getRad.max_cache_n\", default = Inf),   max_size = getOption(\"getRad.max_cache_size_bytes\", default = 1024 * 1024 * 1024),   ... )"},{"path":"https://aloftdata.github.io/getRad/reference/req_cache_getrad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to set the cache for a getRad specific httr2 request — req_cache_getrad","text":"req httr2 request. use_cache Logical indicating whether use cache. Default TRUE. FALSE cache ignored file fetched anew. can also useful want force refresh cache. max_n, max_age, max_size Automatically prune cache specifying one : max_age: delete files older number seconds. max_n: delete files (oldest newest) preserve many files. max_size: delete files (oldest newest) preserve many bytes. cache pruning performed per minute. ... Additional arguments passed httr2::req_cache().","code":""},{"path":"https://aloftdata.github.io/getRad/reference/secret.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get secrets from the keyring — set_secret","title":"Set or get secrets from the keyring — set_secret","text":"services require credentials access data. function uses keyring safely store credentials computer.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/secret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get secrets from the keyring — set_secret","text":"","code":"set_secret(name, secret = NULL)  get_secret(name)"},{"path":"https://aloftdata.github.io/getRad/reference/secret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get secrets from the keyring — set_secret","text":"name Name secret set get character (e.g. \"nl_api_key\"). secret Optionally character string secret, alternatively system prompt user.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/secret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get secrets from the keyring — set_secret","text":"set_secret() returns TRUE secret successfully set. get_secret() returns secret character string.","code":""},{"path":"https://aloftdata.github.io/getRad/reference/secret.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or get secrets from the keyring — set_secret","text":"working cluster might advantageous use specific keyring, can done setting keyring_backend option R. package uses option getRad.key_prefix prefix keys stored. want use multiple keys api can manipulate option.","code":""},{"path":"https://aloftdata.github.io/getRad/news/index.html","id":"getrad-023","dir":"Changelog","previous_headings":"","what":"getRad 0.2.3","title":"getRad 0.2.3","text":"CRAN release: 2025-10-14 Improve error requesting German data temporal restrictions (#131). Start using air formatter (#128). fail rather warn csv missing repository (#136). get_pvol correct attributes German data causing incorrect vp heights (#139).","code":""},{"path":"https://aloftdata.github.io/getRad/news/index.html","id":"getrad-022","dir":"Changelog","previous_headings":"","what":"getRad 0.2.2","title":"getRad 0.2.2","text":"CRAN release: 2025-09-29 Support downloading Slovakian polar volume data (#124). Add retry attempts get_weather_radars NEXRAD prevent failure (#116). Update NEXRAD url (#118). Fix CRAN warning cache cleaned tests (#122). Resolve withr error Danish radars.","code":""},{"path":"https://aloftdata.github.io/getRad/news/index.html","id":"getrad-021","dir":"Changelog","previous_headings":"","what":"getRad 0.2.1","title":"getRad 0.2.1","text":"CRAN release: 2025-08-25 bug (#101) get_vpts() fixed caused function return first day interval, regardless length interval (#105). Support downloading Swedish polar volume data (#96). Support downloading Romanian polar volume data (#104). attribute now present Czech data (#102). Use withr prevent files left temporary directories (#98).","code":""},{"path":"https://aloftdata.github.io/getRad/news/index.html","id":"getrad-020","dir":"Changelog","previous_headings":"","what":"getRad 0.2.0","title":"getRad 0.2.0","text":"CRAN release: 2025-07-16 New function get_weather_radars() retrieves metadata OPERA weather radars (#15, #54). New function get_vpts() downloads vertical profile time series Aloft bucket RMI (#10, #53). New function get_vpts_coverage() fetches overview table files available Aloft bucket (#10) RMI. get_pvol() now downloads polar volumes NOAA (United States) (#55). Add Cecilia Nilsson Alexander Tedeschi contributors.","code":""},{"path":"https://aloftdata.github.io/getRad/news/index.html","id":"getrad-010","dir":"Changelog","previous_headings":"","what":"getRad 0.1.0","title":"getRad 0.1.0","text":"Initial package development. New function get_pvol() downloads polar volumes 6 countries.","code":""}]
